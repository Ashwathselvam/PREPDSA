/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> res = new LinkedList<>();
    public List<Integer> rightSideView(TreeNode root) {
     if(root ==null) return res;
     Queue<TreeNode> q = new LinkedList<>();
     q.offer(root);
     while(!q.isEmpty()){
         int len = q.size();
        TreeNode rs = null;
        for(int i=0;i<len;i++){
            TreeNode pop = q.poll();
            rs=pop;
            if(pop.left!=null) q.offer(pop.left);
            if(pop.right!=null) q.offer(pop.right);
        }
        res.add(rs.val);
     }
     return res;
}
}
