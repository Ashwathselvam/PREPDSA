/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> qu = new LinkedList<>();
        List<List<Integer>> res = new LinkedList<>();
        if(root==null) return res;
        qu.offer(root);
        while(!qu.isEmpty()){
            List<Integer> temp = new LinkedList<>();
            int len = qu.size();
           for(int i=0;i<len;i++){
               TreeNode pop = qu.poll();
               if(pop.left!=null) qu.offer(pop.left);
               if(pop.right!=null) qu.offer(pop.right);
               temp.add(pop.val);
           }
            res.add(temp);
        }
        return res;
    }
}
